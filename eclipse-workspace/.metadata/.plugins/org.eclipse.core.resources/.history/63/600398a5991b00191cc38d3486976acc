package demo;

import java.util.Scanner;

/*
** 回形取数 **

题目描述
回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。

输入
输入第一行是两个不超过200的正整数m,  n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。

输出
输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。

样例输入
3 3 
1 2 3 
4 5 6 
7 8 9 

样例输出
1 4 7 8 9 6 3 2 5
*/
public class FetchNumber {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int line = scanner.nextInt();		//行数
		int column = scanner.nextInt();		//列数
		
		int[][] array = new int[line][column];		//矩阵大小
		
		//为矩阵赋值
		for (int i = 0; i < array.length; i++) {
			for (int j = 0; j < array[i].length; j++) {
				array[i][j] = scanner.nextInt();
			}
		}
		
		scanner.close();
		
		for (int l = 0; l < line; ) {
			for (int c = 0; c < column; ) {
				System.out.print(array[l][c]);
				if (c == 0) {		//如果是第一列
					if (l + 1 == line) {		//如果是最后一行
						c++;		//列增加
					} else {
						l++;		//否则行增加
					}
				} else if (c + 1 == column) {		//如果是最后一列
					if (l + 1 == line) {		//如果是最后一行
						l--;		//行减少
					} else {
						c++;		//否则列增加
					}
				} else {		//如果既不是第一列也不是最后一列
					if (l + 1 == line) {		//如果是最后一行
						c++;		//列增加
					} else {
						l++;		//否则行增加
					} else if (l == 0) {		//如果是第一行
						c--;		//列减少
					} else {
						l--;		//否则行减少
					}
				}
			}
		}
	}
}
